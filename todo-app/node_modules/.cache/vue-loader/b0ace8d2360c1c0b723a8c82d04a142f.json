{"remainingRequest":"D:\\xampp\\htdocs\\todoapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\xampp\\htdocs\\todoapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\xampp\\htdocs\\todoapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampp\\htdocs\\todoapp\\todo-app\\components\\Todo.vue?vue&type=template&id=37007721&","dependencies":[{"path":"D:\\xampp\\htdocs\\todoapp\\todo-app\\components\\Todo.vue","mtime":1601657269451},{"path":"D:\\xampp\\htdocs\\todoapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\todoapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\todoapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\todoapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"todo\", class: { todo__selected: _vm.selected } },\n    [\n      _c(\"div\", { staticClass: \"todo_head\", on: { click: _vm.handleClick } }, [\n        _c(\"div\", { staticClass: \"todo_icon\", style: { color: _vm.color } }, [\n          _c(\"i\", { class: [\"fa\", \"fa-\" + _vm.todo.icon] })\n        ]),\n        _vm._m(0)\n      ]),\n      _c(\"div\", { staticClass: \"todo_body\" }, [\n        _vm.todo.tasks\n          ? _c(\"p\", { staticClass: \"todo_tips\" }, [\n              _vm._v(_vm._s(_vm.todo.tasks.length) + \" Tasks\")\n            ])\n          : _vm._e(),\n        _vm.editing == false\n          ? _c(\"h3\", { staticClass: \"todo_title\" }, [\n              _vm._v(_vm._s(_vm.todo.name) + \" \"),\n              _vm.selected != null\n                ? _c(\"i\", {\n                    staticClass: \"fa fa-pencil-square-o\",\n                    on: { click: _vm.enable_editing }\n                  })\n                : _vm._e()\n            ])\n          : _vm._e(),\n        _vm.editing == true\n          ? _c(\"h3\", { staticClass: \"todo_title\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.todo.name,\n                    expression: \"todo.name\"\n                  }\n                ],\n                staticClass: \"editing_toggles\",\n                domProps: { value: _vm.todo.name },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.todo, \"name\", $event.target.value)\n                  }\n                }\n              }),\n              _vm.selected != null\n                ? _c(\"i\", {\n                    staticClass: \"fa fa-save\",\n                    on: { click: _vm.save_editing }\n                  })\n                : _vm._e()\n            ])\n          : _vm._e(),\n        _c(\"div\", { staticClass: \"todo_progress\" }, [\n          _c(\"span\", { staticClass: \"todo_progress_line\" }, [\n            _c(\"i\", {\n              style: { width: _vm.progress, backgroundImage: _vm.progressColor }\n            })\n          ]),\n          _c(\"span\", { staticClass: \"todo_progress_num\" }, [\n            _vm._v(_vm._s(_vm.progress))\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"todo_tasks\" }, [\n          _vm.todayTasks.length\n            ? _c(\"h4\", { staticClass: \"todo_subtitle\" }, [_vm._v(\"Today\")])\n            : _vm._e(),\n          _c(\n            \"ul\",\n            { staticClass: \"columns\" },\n            [\n              _c(\n                \"draggable\",\n                {\n                  model: {\n                    value: _vm.todo.tasks,\n                    callback: function($$v) {\n                      _vm.$set(_vm.todo, \"tasks\", $$v)\n                    },\n                    expression: \"todo.tasks\"\n                  }\n                },\n                _vm._l(_vm.todayTasks, function(task) {\n                  return _c(\n                    \"li\",\n                    { key: task.id, staticClass: \"column\" },\n                    [_c(\"task\", { attrs: { todo: _vm.todo, task: task } })],\n                    1\n                  )\n                }),\n                0\n              )\n            ],\n            1\n          ),\n          _vm.tomorrowTasks.length\n            ? _c(\"h4\", { staticClass: \"todo_subtitle\" }, [_vm._v(\"Tomorrow\")])\n            : _vm._e(),\n          _c(\n            \"ul\",\n            [\n              _c(\n                \"draggable\",\n                {\n                  model: {\n                    value: _vm.todo.tasks,\n                    callback: function($$v) {\n                      _vm.$set(_vm.todo, \"tasks\", $$v)\n                    },\n                    expression: \"todo.tasks\"\n                  }\n                },\n                _vm._l(_vm.tomorrowTasks, function(task) {\n                  return _c(\n                    \"li\",\n                    { key: task.id },\n                    [_c(\"task\", { attrs: { todo: _vm.todo, task: task } })],\n                    1\n                  )\n                }),\n                0\n              )\n            ],\n            1\n          ),\n          _vm.outdatedTasks.length\n            ? _c(\"h4\", { staticClass: \"todo_subtitle\" }, [_vm._v(\"Outdated\")])\n            : _vm._e(),\n          _c(\n            \"ul\",\n            [\n              _c(\n                \"draggable\",\n                {\n                  model: {\n                    value: _vm.todo.tasks,\n                    callback: function($$v) {\n                      _vm.$set(_vm.todo, \"tasks\", $$v)\n                    },\n                    expression: \"todo.tasks\"\n                  }\n                },\n                _vm._l(_vm.outdatedTasks, function(task) {\n                  return _c(\n                    \"li\",\n                    { key: task.id },\n                    [_c(\"task\", { attrs: { todo: _vm.todo, task: task } })],\n                    1\n                  )\n                }),\n                0\n              )\n            ],\n            1\n          )\n        ])\n      ])\n    ]\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"todo_menu\" }, [\n      _c(\"i\", { staticClass: \"fa fa-ellipsis-v\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}