{"remainingRequest":"/Users/quentin/git/todobackup/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quentin/git/todobackup/todo-app/components/Todotinder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/quentin/git/todobackup/todo-app/components/Todotinder.vue","mtime":1602596546129},{"path":"/Users/quentin/git/todobackup/node_modules/cache-loader/dist/cjs.js","mtime":1602140161523},{"path":"/Users/quentin/git/todobackup/node_modules/vue-loader/lib/index.js","mtime":1602140163669}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueSwing from 'vue-swing'\nexport default {\n  name: 'todotinder',\n  components: { VueSwing },\n  data () {\n    return {\n      config: {\n        allowedDirections: [\n          VueSwing.Direction.UP,\n          VueSwing.Direction.DOWN,\n          VueSwing.Direction.LEFT,\n          VueSwing.Direction.RIGHT\n        ],\n        minThrowOutDistance: 250,\n        maxThrowOutDistance: 300\n      },\n      cards: ['Hausarbeit schreiben', 'Hund füttern']\n    }\n  },\n  methods: {\n    add () {\n      this.cards.push(`${this.cards.length + 1}`)\n    },\n    remove () {\n      this.swing()\n      setTimeout(() => {\n        this.cards.pop()\n      }, 100)\n    },\n    swing () {\n      const cards = this.$refs.vueswing.cards\n      cards[cards.length - 1].throwOut(\n          Math.random() * 100 - 50,\n          Math.random() * 100 - 50\n      )\n    },\n    onThrowout ({ target, throwDirection }) {\n      console.log(`Threw out ${target.textContent}!`)\n    }\n  }\n}\n",{"version":3,"sources":["Todotinder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todotinder.vue","sourceRoot":"components","sourcesContent":["<template>\n  <!-- https://github.com/goweiwen/vue-swing -->\n  <div id=\"app\">\n    <router-link to=\"/\"><h1 style=\"text-align:center; margin-top: 0.67em; font-size: 1.5em; color: black\">Zurück</h1></router-link>\n\n    <vue-swing\n        @throwout=\"onThrowout\"\n        :config=\"config\"\n        ref=\"vueswing\"\n    >\n      <div\n          v-for=\"card in cards\"\n          :key=\"card\"\n          class=\"card\"\n      >\n        <span>{{ card }}</span>\n      </div>\n    </vue-swing>\n\n    <img src=\"../assets/heart.png\" class=\"heart\"/>\n    <img src=\"../assets/x.png\" class=\"x\"/>\n\n  </div>\n</template>\n\n<script>\nimport VueSwing from 'vue-swing'\nexport default {\n  name: 'todotinder',\n  components: { VueSwing },\n  data () {\n    return {\n      config: {\n        allowedDirections: [\n          VueSwing.Direction.UP,\n          VueSwing.Direction.DOWN,\n          VueSwing.Direction.LEFT,\n          VueSwing.Direction.RIGHT\n        ],\n        minThrowOutDistance: 250,\n        maxThrowOutDistance: 300\n      },\n      cards: ['Hausarbeit schreiben', 'Hund füttern']\n    }\n  },\n  methods: {\n    add () {\n      this.cards.push(`${this.cards.length + 1}`)\n    },\n    remove () {\n      this.swing()\n      setTimeout(() => {\n        this.cards.pop()\n      }, 100)\n    },\n    swing () {\n      const cards = this.$refs.vueswing.cards\n      cards[cards.length - 1].throwOut(\n          Math.random() * 100 - 50,\n          Math.random() * 100 - 50\n      )\n    },\n    onThrowout ({ target, throwDirection }) {\n      console.log(`Threw out ${target.textContent}!`)\n    }\n  }\n}\n</script>\n\n<style>\n\n.x {\n  position: absolute;\n  bottom: 120px;\n  left: 45px;\n  width: 20%;\n}\n\n.heart {\n  width: 12%;\n  position: absolute;\n  bottom: 140px;\n  right: 60px;\n}\n\nbody {\n  background-color: #444;\n  margin: 0;\n}\n.card {\n  align-items: center;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  display: flex;\n  font-size: 20px;\n  height: 200px;\n  justify-content: center;\n  left: calc(50% - 100px);\n  position: absolute;\n  top: calc(50% - 100px);\n  width: 200px;\n}\n</style>\n"]}]}