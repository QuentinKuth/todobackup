{"remainingRequest":"/Users/quentin/Downloads/todocopy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quentin/Downloads/todocopy/todo-app/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/quentin/Downloads/todocopy/todo-app/components/TodoList.vue","mtime":1601315824000},{"path":"/Users/quentin/Downloads/todocopy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quentin/Downloads/todocopy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex'\nimport Todo from './Todo.vue'\n\nexport default {\n  components: {\n    Todo\n  },\n  mounted () {\n    let touch = {}\n    this.$el.addEventListener('touchstart', evt => {\n      touch.startX = evt.touches[0].clientX\n      touch.endX = 0\n    })\n    this.$el.addEventListener('touchmove', evt => {\n      touch.endX = evt.touches[0].clientX\n    })\n    this.$el.addEventListener('touchend', () => {\n      if (!touch.endX || Math.abs(touch.endX - touch.startX) < 10) {\n        return\n      }\n      if (touch.endX < touch.startX) {\n        this.nextTodo()\n      } else {\n        this.prevTodo()\n      }\n    })\n  },\n  computed: {\n    ...mapState(['todos', 'currentIndex', 'selected'])\n  },\n  methods: {\n    ...mapMutations(['selectTodo', 'nextTodo', 'prevTodo'])\n  }\n}\n",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"components","sourcesContent":["<template>\n  <div class=\"todo-list\" :class=\"{ 'todo-list__selected': !!selected }\">\n    <ul :style=\"{ width: `${todos.length * 100}%` }\">\n      <li\n        v-for=\"todo in todos\"\n        :key=\"todo.name\"\n        :style=\"{ transform: `translate3d(-${currentIndex * 100}%, 0, 0)` }\"\n      >\n        <todo\n          :todo=\"todo\"\n          :selected=\"selected && todo === selected.todo\"\n          @select=\"selectTodo\"\n        />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport Todo from './Todo.vue'\n\nexport default {\n  components: {\n    Todo\n  },\n  mounted () {\n    let touch = {}\n    this.$el.addEventListener('touchstart', evt => {\n      touch.startX = evt.touches[0].clientX\n      touch.endX = 0\n    })\n    this.$el.addEventListener('touchmove', evt => {\n      touch.endX = evt.touches[0].clientX\n    })\n    this.$el.addEventListener('touchend', () => {\n      if (!touch.endX || Math.abs(touch.endX - touch.startX) < 10) {\n        return\n      }\n      if (touch.endX < touch.startX) {\n        this.nextTodo()\n      } else {\n        this.prevTodo()\n      }\n    })\n  },\n  computed: {\n    ...mapState(['todos', 'currentIndex', 'selected'])\n  },\n  methods: {\n    ...mapMutations(['selectTodo', 'nextTodo', 'prevTodo'])\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.todo-list {\n  padding: 0 32px;\n  height: 400px;\n  transition: all 0.5s ease;\n\n  > ul,\n  > ul > li {\n    display: flex;\n    height: 100%;\n  }\n  > ul > li {\n    flex: 1;\n    transition: transform 0.5s ease;\n  }\n  .todo {\n    border-radius: 8px;\n    background-color: white;\n  }\n}\n.todo-list__selected {\n  transform: scaleX(1.25);\n}\n</style>\n"]}]}